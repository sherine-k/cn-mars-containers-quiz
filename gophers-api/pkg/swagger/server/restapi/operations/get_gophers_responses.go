// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/scraly/gophers-api/pkg/swagger/server/models"
)

// GetGophersOKCode is the HTTP code returned for type GetGophersOK
const GetGophersOKCode int = 200

/*
GetGophersOK Return the Gophers list.

swagger:response getGophersOK
*/
type GetGophersOK struct {
	/*

	 */
	AccessControlAllowOrigin string `json:"Access-Control-Allow-Origin"`

	/*
	  In: Body
	*/
	Payload []*models.Gopher `json:"body,omitempty"`
}

// NewGetGophersOK creates GetGophersOK with default headers values
func NewGetGophersOK() *GetGophersOK {

	return &GetGophersOK{}
}

// WithAccessControlAllowOrigin adds the accessControlAllowOrigin to the get gophers o k response
func (o *GetGophersOK) WithAccessControlAllowOrigin(accessControlAllowOrigin string) *GetGophersOK {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
	return o
}

// SetAccessControlAllowOrigin sets the accessControlAllowOrigin to the get gophers o k response
func (o *GetGophersOK) SetAccessControlAllowOrigin(accessControlAllowOrigin string) {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
}

// WithPayload adds the payload to the get gophers o k response
func (o *GetGophersOK) WithPayload(payload []*models.Gopher) *GetGophersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get gophers o k response
func (o *GetGophersOK) SetPayload(payload []*models.Gopher) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGophersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Access-Control-Allow-Origin

	accessControlAllowOrigin := o.AccessControlAllowOrigin
	if accessControlAllowOrigin != "" {
		rw.Header().Set("Access-Control-Allow-Origin", accessControlAllowOrigin)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Gopher, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
