// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/scraly/gophers-api/pkg/swagger/server/models"
)

// PostGopherCreatedCode is the HTTP code returned for type PostGopherCreated
const PostGopherCreatedCode int = 201

/*
PostGopherCreated Created

swagger:response postGopherCreated
*/
type PostGopherCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Gopher `json:"body,omitempty"`
}

// NewPostGopherCreated creates PostGopherCreated with default headers values
func NewPostGopherCreated() *PostGopherCreated {

	return &PostGopherCreated{}
}

// WithPayload adds the payload to the post gopher created response
func (o *PostGopherCreated) WithPayload(payload *models.Gopher) *PostGopherCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post gopher created response
func (o *PostGopherCreated) SetPayload(payload *models.Gopher) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGopherCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGopherConflictCode is the HTTP code returned for type PostGopherConflict
const PostGopherConflictCode int = 409

/*
PostGopherConflict Gopher already exists

swagger:response postGopherConflict
*/
type PostGopherConflict struct {
}

// NewPostGopherConflict creates PostGopherConflict with default headers values
func NewPostGopherConflict() *PostGopherConflict {

	return &PostGopherConflict{}
}

// WriteResponse to the client
func (o *PostGopherConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
